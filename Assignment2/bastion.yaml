Description: >
  Create bastion machine in public subnet to access webservers in private subnet.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  AmiImageId:
    Description: AMI image id
    Type: String
    Default: ami-003634241a8fcdec0

  InstanceType:
    Description: Instance Type
    Type: String

  BastionKey:
    Description: Existing Keypair name
    Type: String

Resources:
  Bastion:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref BastionKey
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: "10"
      SecurityGroupIds:
        - !Ref BastionSecurityGroup
      SubnetId:
        Fn::ImportValue: !Sub ${EnvironmentName}-PUB1-SN
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Bastion

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH via 22
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Bastion SG

Outputs:

  PublicIP:
    Description: Bastion Instance Public IP
    Value: !GetAtt Bastion.PublicIp
    Export:
      Name: !Sub ${EnvironmentName}-BASTION-IP

  SecurityGroupID:
    Description: Bastion Security Group ID
    Value: !Ref BastionSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}-BASTION-SG
